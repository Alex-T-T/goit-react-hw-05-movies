{"version":3,"file":"static/js/170.18bafccc.chunk.js","mappings":"sRAGaA,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,+bAUTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,yrBAmBPG,GAAUH,EAAAA,EAAAA,IAAO,MAAPA,CAAH,qF,kBC1BdI,EAAc,mCAAG,WAAOC,GAAP,6EACH,mCADG,SAEIC,MAAM,sCAAD,OAAuCD,EAAvC,oBADZ,qCADG,YAEbE,EAFa,QAGFC,GAHE,yCAIJD,EAASE,QAJL,gCAMJC,QAAQC,OAAO,IAAIC,MAAJ,uBANX,2CAAH,sDAwEpB,EA/DqB,WAAO,IAAD,YACvB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACNhB,EAAeiB,OAAOL,IACjBM,KAAKP,GACTQ,OAAM,SAAAC,GACPd,QAAQC,OAAO,IAAIC,MAAJ,UAAaY,EAAMC,UACrC,GACA,GAAE,CAACT,IAEJ,IAAQU,EAAmEZ,EAAnEY,MAAOC,EAA4Db,EAA5Da,YAAaC,EAA+Cd,EAA/Cc,WAAYC,EAAmCf,EAAnCe,SAAUC,EAAyBhB,EAAzBgB,OAAQC,EAAiBjB,EAAjBiB,aAsBpDC,EATe,SAACA,GAElB,IAAMC,EAAYD,EANH,SAACA,GAChB,OAAQE,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,GAAO,OAClC,CAKUI,CAAWJ,GACZ,GAEN,OAAOC,CACV,CAEYI,CAAaN,GAI1B,OAFAO,QAAQC,IAAI,kBAAmBP,IAG3B,iCACI,UAAC/B,EAAD,CAASuC,GAAE,oBAAEtB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAWC,KAAG,EAAnD,eAAqD,SAAC,MAAD,IAArD,cACA,UAAC5C,EAAD,YACI,gBAAK6C,IA5BO,SAACjB,GAIrB,OAHkBA,EAAW,6CACeA,GACtC,0DAET,CAuBqBkB,CAAgBlB,GAAcmB,IAAMpB,EAAOqB,MAAM,SAC3D,UAAC5C,EAAD,YACA,0BAAKuB,EAAL,KAAcM,EAAd,QACA,yCAAiBJ,MACjB,wCACA,uBAAIC,KACJ,qCACCC,IAAU,uBAAKA,EAAOkB,KAAI,qBAAEC,IAAF,IAAmBC,KAAK,eAGvD,2BACA,SAAC,KAAD,CAASV,GAAG,OAAOC,MAAO,CAACC,KAAI,oBAAExB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAAxE,oBACA,SAAC,KAAD,CAASH,GAAG,UAAUC,MAAO,CAACC,KAAI,oBAAExB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAA3E,yBAEA,SAAC,KAAD,MAGX,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled('div')`\n    display: flex;\n    justify-content: center;\n    padding: 30px;\n    font-size: 20px;\n    color: #010101;\n    background: #fffc00;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to bottom right, #ffffff, #fffc00);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to bottom right, #ffffff, #fffc00); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`\nexport const NavItem = styled(NavLink)`\n    width: 120px;\n    text-align: center;\n    margin-bottom: 5px;\n    border: 2px solid blue;\n    border-radius: 8px;\n    background: #fffc00;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to left, #ffffff, #fffc00);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to left, #ffffff, #fffc00);\n\n    :hover,\n    :focus {\n        color: red;\n        background: #fffc00;  /* fallback for old browsers */\n        background: -webkit-linear-gradient(to right, #ffffff, #fffc00);  /* Chrome 10-25, Safari 5.1-6 */\n        background: linear-gradient(to right, #ffffff, #fffc00);\n        transform: scale(1.02);\n    }\n`\nexport const Wrapper = styled('div')`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 30px;\n`","import { useState, useEffect } from \"react\";\nimport { NavLink, Outlet, useParams, useLocation} from \"react-router-dom\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport { Container, NavItem, Wrapper } from \"./MovieDetails.styled\";\nimport { format } from 'date-fns'\n\nconst fetchMovieById = async (id) => {\n    const API_KEY = '85df3ff8d6dde44e5fe9194c59be3b9a';\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        if (response.ok) {\n            return response.json();\n            }\n            return Promise.reject(new Error(`We have a problem`))\n        }\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n\n        \n    useEffect(() => {\n        fetchMovieById(Number(movieId))\n            .then(setMovie)\n        .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n    } )\n    }, [movieId])\n\n    const { title, poster_path, popularity, overview, genres, release_date } = movie;\n   \n    const createPosterUrl = (poster_path) => {\n        const posterUrl = poster_path\n            ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n            : 'https://klike.net/uploads/posts/2020-02/1581672920_6.jpg'\n        return posterUrl\n    } \n\n    const FormatDate = (date) => {\n        return  format(new Date(date), 'yyyy')\n    }\n\n    const FormatedDate = (date) => {\n        \n        const finalDate = date\n            ?  FormatDate(date)\n            : '';\n        \n        return finalDate;\n    };\n\n    const date = FormatedDate(release_date)\n\n    console.log(\"FormatedDate =>\", date);\n\n    return (\n        <>\n            <NavItem to={location.state?.from ?? '/movies'} end> <TiArrowBack/>Go Back</NavItem>\n            <Container>\n                <img src={createPosterUrl(poster_path)} alt={ title} width='240'/>\n                <Wrapper>\n                <h2>{title} ({date})</h2>\n                <p> User score: {popularity}</p>\n                <h2> Overview </h2>\n                <p>{overview}</p>\n                <h2> Genres </h2>\n                {genres && <p>{ genres.map(({name}) => name ).join(', ')}</p>}\n                </Wrapper>\n            </Container>\n            <ul>\n            <NavLink to=\"cast\" state={{from: location.state?.from ?? '/movies'}} end> Cast</NavLink>\n            <NavLink to=\"reviews\" state={{from: location.state?.from ?? '/movies'}} end> Review</NavLink>\n            </ul>\n            <Outlet/>\n        </>\n    )\n}\n\nexport default MovieDetails;"],"names":["Container","styled","NavItem","NavLink","Wrapper","fetchMovieById","id","fetch","response","ok","json","Promise","reject","Error","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","Number","then","catch","error","message","title","poster_path","popularity","overview","genres","release_date","date","finalDate","format","Date","FormatDate","FormatedDate","console","log","to","state","from","end","src","createPosterUrl","alt","width","map","name","join"],"sourceRoot":""}