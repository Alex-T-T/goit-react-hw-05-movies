{"version":3,"file":"static/js/170.85359c82.chunk.js","mappings":"iQAGaA,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,0fAaTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,48BAuBPG,GAAUH,EAAAA,EAAAA,IAAO,MAAPA,CAAH,qFAMPI,GAAQJ,EAAAA,EAAAA,IAAO,KAAPA,CAAH,8CAILK,GAAOL,EAAAA,EAAAA,IAAO,IAAPA,CAAH,8CAIJM,GAAkBN,EAAAA,EAAAA,IAAO,KAAPA,CAAH,kN,kBCF5B,EA5CqB,WAAO,IAAD,YACvB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaC,OAAON,IACfO,KAAKR,GACTS,OAAM,SAAAC,GACPC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAMI,UACrC,GACA,GAAE,CAACb,IAEJ,IAAQc,EAAqEhB,EAArEgB,MAAOC,EAA8DjB,EAA9DiB,YAAaC,EAAiDlB,EAAjDkB,aAAcC,EAAmCnB,EAAnCmB,SAAUC,EAAyBpB,EAAzBoB,OAAQC,EAAiBrB,EAAjBqB,aACtDC,GAAYC,EAAAA,EAAAA,IAAgBN,GAC5BO,GAAOC,EAAAA,EAAAA,IAAWJ,GAClBK,GAAaC,EAAAA,EAAAA,IAAgBT,GAEnC,OACI,iCACI,UAACzB,EAAD,CAASmC,GAAE,oBAAExB,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAWC,KAAG,EAAnD,eAAqD,SAAC,MAAD,IAArD,cACA,UAACxC,EAAD,YACI,gBAAKyC,IAAKV,EAAWW,IAAMjB,EAAOkB,MAAM,SACxC,UAACvC,EAAD,YACA,UAACC,EAAD,WAAQoB,EAAR,IAAgBQ,MAChB,UAAC3B,EAAD,2BAAoB6B,MACpB,SAAC9B,EAAD,0BACA,SAACC,EAAD,UAAOsB,KACP,SAACvB,EAAD,uBACCwB,IAAU,SAACvB,EAAD,UAAQuB,EAAOe,KAAI,qBAAEC,IAAF,IAAmBC,KAAK,eAG1D,UAACvC,EAAD,YACI,SAACL,EAAD,CAASmC,GAAG,OAAOC,MAAO,CAACC,KAAI,oBAAE1B,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAAxE,oBACA,SAACtC,EAAD,CAASmC,GAAG,UAAUC,MAAO,CAACC,KAAI,oBAAE1B,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAA3E,yBAGJ,SAAC,EAAAO,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QAIf,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled('div')`\n    display: flex;\n    justify-content: center;\n    padding: 30px;\n    margin-bottom: 20px;\n    font-size: 20px;\n    color: #010101;\n    border-radius: 8px;\n    border-bottom: 2px solid blue;\nbackground: #FFEEEE;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`\nexport const NavItem = styled(NavLink)`\n    width: 120px;\n    text-align: center;\n    margin-bottom: 5px;\n    border: 2px solid blue;\n    border-radius: 8px;\nbackground: #FFEEEE;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to right, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to right, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n    &.active {\n        background: linear-gradient(to right, #1488cc, #2b32b2);\n        color: #fff;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: red;\n        background: #FFEEEE;  /* fallback for old browsers */\n        background: -webkit-linear-gradient(to left, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\n        background: linear-gradient(to left, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        transform: scale(1.02);\n    }\n`\nexport const Wrapper = styled('div')`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 30px;\n`\n\nexport const Title = styled('h2')`\nmargin-bottom: 10px;\n`\n\nexport const Text = styled('p')`\nmargin-bottom: 10px;\n`\n\nexport const AdditionalLinks = styled('ul')`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 30px;\n    margin-bottom: 20px;\n    border-radius: 8px;\n    border-bottom: 2px solid blue;\n`","import { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useParams, useLocation} from \"react-router-dom\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport { Container, NavItem, Wrapper, Title, Text, AdditionalLinks } from \"./MovieDetails.styled\";\nimport { FormatDate, FormatUserScore, CreatePosterUrl, getMovieById } from \"utils\";\nimport PropTypes from 'prop-types'\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        getMovieById(Number(movieId))\n            .then(setMovie)\n        .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n    } )\n    }, [movieId])\n\n    const { title, poster_path, vote_average, overview, genres, release_date } = movie;\n    const posterUrl = CreatePosterUrl(poster_path);\n    const date = FormatDate(release_date);\n    const userScores = FormatUserScore(vote_average);\n\n    return (\n        <>\n            <NavItem to={location.state?.from ?? '/movies'} end> <TiArrowBack/>Go Back</NavItem>\n            <Container>\n                <img src={posterUrl} alt={ title} width='240'/>\n                <Wrapper>\n                <Title>{title} {date}</Title>\n                <Text> User score: {userScores}</Text>\n                <Title> Overview </Title>\n                <Text>{overview}</Text>\n                <Title> Genres </Title>\n                {genres && <Text>{ genres.map(({name}) => name ).join(', ')}</Text>}\n                </Wrapper>\n            </Container>\n            <AdditionalLinks>\n                <NavItem to=\"cast\" state={{from: location.state?.from ?? '/movies'}} end> Cast</NavItem>\n                <NavItem to=\"reviews\" state={{from: location.state?.from ?? '/movies'}} end> Review</NavItem>\n            </AdditionalLinks>\n\n            <Suspense fallback={null}>\n                <Outlet/>\n            </Suspense>\n        </>\n    )\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    movieId: PropTypes.string,\n    movie: PropTypes.shape({\n        cast: PropTypes.arrayOf(\n            PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                poster_path: PropTypes.string.isRequired,\n                vote_average: PropTypes.number.isRequired,\n                overview: PropTypes.string.isRequired,\n                genres: PropTypes.arrayOf(PropTypes.shape({\n                    name: PropTypes.string.isRequired,\n                })),\n                release_date: PropTypes.string.isRequired,\n            })\n        )\n    })\n}"],"names":["Container","styled","NavItem","NavLink","Wrapper","Title","Text","AdditionalLinks","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","Number","then","catch","error","Promise","reject","Error","message","title","poster_path","vote_average","overview","genres","release_date","posterUrl","CreatePosterUrl","date","FormatDate","userScores","FormatUserScore","to","state","from","end","src","alt","width","map","name","join","Suspense","fallback"],"sourceRoot":""}