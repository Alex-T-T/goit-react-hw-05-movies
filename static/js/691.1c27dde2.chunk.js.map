{"version":3,"file":"static/js/691.1c27dde2.chunk.js","mappings":"mQAGaA,GAAYC,EAAAA,EAAAA,IAAO,OAAPA,CAAH,kLAWTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sQ,2BCuHpB,EA7De,WACX,OAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAENC,QAAQC,IAAI,WAAYN,GACV,KAAVA,GAA0B,OAAVA,IAGpBK,QAAQC,IAAI,WAAYN,GAExBJ,GAAa,IAEbW,EAAAA,EAAAA,IAAgBP,GACXQ,MAAK,SAACC,GACHf,EAAUe,GACVb,GAAa,EAEhB,IACAc,OAAM,SAAAC,GACHC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAMI,UACrC,IACR,GAAE,CAACf,IAaJ,OACI,UAACZ,EAAD,YACI,SAAC4B,EAAA,EAAD,CAAcC,aAbG,SAACC,GAClBb,QAAQC,IAAIY,GACZb,QAAQC,IAAIN,GACRkB,IAAgBlB,EAIxBD,EAAgC,KAAhBmB,EAAqB,CAAElB,MAAOkB,GAAgB,CAAC,GAH3DC,EAAAA,GAAAA,MAAA,iCAAsCnB,EAAtC,qCAKP,EAIiDoB,MAAOpB,IAChDL,IAAa,4BACV,mDACI,SAAC,KAAD,QAGR,yBACKF,IAAU,wBACgB,IAA1BA,EAAO4B,QAAQC,OACV7B,EAAO4B,QAAQE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OAAO,yBAAa,UAACnC,EAAD,CAASoC,GAAE,UAAKF,GAAMG,MAAO,CAACC,KAAM1B,GAAW2B,KAAG,EAAlD,cAAqDJ,MAAzDD,EACnB,KACC,qDAKrB,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled('main')`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 100%;\nheight: 100%;\n`\n\nexport const NavItem = styled(NavLink)`\ndisplay: block;\nwidth: 300px;\npadding: 8px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: #000;\n\n    :hover,\n    :focus-visible {\n        background: linear-gradient(to right, #1488cc, #2b32b2);\n        color: #fff;\n    }\n`","import { useState, useEffect} from \"react\"\nimport { useLocation } from \"react-router-dom\";\n\nimport MoviesSearch from \"../../components/MoviesSearch/MoviesSearch\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Dna } from 'react-loader-spinner';\nimport { NavItem, Container } from \"./Movies.styled\";\nimport { toast } from \"react-toastify\";\nimport { getSearchMovies } from \"utils\";\n\n// const Movies = () => {\n\n//     // const [movies, setMovies] = useState(JSON.parse(window.localStorage.getItem('movies')) ?? null);\n//     const [movies, setMovies] = useState(null);\n\n//     const [value, setValue] = useState('');\n    // const [isLoading, setIsLoading] = useState(false);\n//     const [searchParams, setSearchParams] = useSearchParams();\n//     const location = useLocation();\n//     const filter = searchParams.get('query') ?? '';\n//     console.log('filter =>', filter);\n\n    // useEffect(() => {\n    //     if (value === '') {\n    //         return\n    //     }\n\n    //     setIsLoading(true);\n\n    //     getSearchMovies(value)\n    //         .then((response) => {\n    //             setMovies(response)\n    //             setIsLoading(false)\n\n    //         })\n    //         .catch(error => {\n    //             Promise.reject(new Error(`${error.message}`))\n    //         })\n    // }, [value])\n\n    // const onFormSubmit = (searchValue) => {\n    //     console.log(searchValue)\n    //         if (searchValue === value) {\n    //     toast.error(\"Enter new search value!\");\n    //     return\n    //     }\n    //     setValue(searchValue)\n    //     console.log(searchValue)\n    //     console.log(value)\n    //     // setMovies(null)\n    //     setSearchParams(searchValue !== '' ? { query: searchValue } : {})\n    //     console.log(searchParams)\n    // }\n\n//     return (\n//         <Container>\n//             <MoviesSearch onFormSubmit={onFormSubmit} searchValue={filter} />\n//             {isLoading && <div>\n//                 <p>Loading... Please wait</p> \n//                     <Dna/> \n//             </div>}\n//             {movies && <ul>\n//                 {movies.results.length !== 0\n//                     ? movies.results.map(({ id, title }) => {\n//                         return <li key={id}><NavItem to={`${id}`} state={{from: location}} end> {title }</NavItem></li>\n//                     })\n//                     : <p>Change your request</p>}\n//                 </ul>}\n//         </Container>\n//     )\n// }\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n    const location = useLocation();\n\n    useEffect(() => {\n\n        console.log('query =>', query)\n        if (query === '' || query === null) {\n            return\n        }\n        console.log('query =>', query)\n\n        setIsLoading(true);\n\n        getSearchMovies(query)\n            .then((response) => {\n                setMovies(response)\n                setIsLoading(false)\n\n            })\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n    }, [query])\n\n        const onFormSubmit = (searchValue) => {\n            console.log(searchValue)\n            console.log(query)\n            if (searchValue === query) {\n            toast.error(`We have already found \"${query}\"! Please, enter new search value`)\n        return\n        }\n        setSearchParams(searchValue !== '' ? { query: searchValue } : {})\n        // console.log(searchParams)\n    }\n\n    return (\n        <Container>\n            <MoviesSearch onFormSubmit={onFormSubmit} value={query} />\n            {isLoading && <div>\n                <p>Loading... Please wait</p> \n                    <Dna/> \n            </div>}\n            {/* <img src=\"../../image/cinema.jpg\" alt=\"cinema\" width=\"100%\"/> */}\n            <div>\n                {movies && <ul>\n                {movies.results.length !== 0\n                    ? movies.results.map(({ id, title }) => {\n                        return <li key={id}><NavItem to={`${id}`} state={{from: location}} end> {title }</NavItem></li>\n                    })\n                    : <p>Change your request</p>}\n                </ul>}\n            </div>\n        </Container>\n    )\n}\n\n\nexport default Movies;"],"names":["Container","styled","NavItem","NavLink","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","console","log","getSearchMovies","then","response","catch","error","Promise","reject","Error","message","MoviesSearch","onFormSubmit","searchValue","toast","value","results","length","map","id","title","to","state","from","end"],"sourceRoot":""}