{"version":3,"file":"static/js/947.ca126a01.chunk.js","mappings":"iOAMMA,EAAc,mCAAG,WAAOC,GAAP,6EACH,mCADG,SAEIC,MAAM,sCAAD,OAAuCD,EAAvC,oBADZ,qCADG,YAEbE,EAFa,QAGFC,GAHE,yCAIJD,EAASE,QAJL,gCAMJC,QAAQC,OAAO,IAAIC,MAAJ,uBANX,2CAAH,sDAuDpB,UA9CqB,WAAO,IAAD,YACvB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACDE,GAAWC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,YAAU,WAENhB,EAAeiB,OAAOL,IACjBM,KAAKP,GACTQ,OAAM,SAAAC,GACPd,QAAQC,OAAO,IAAIC,MAAJ,UAAaY,EAAMC,UACrC,GACA,GAAE,CAACT,IAEJ,IAAQU,EAAqDZ,EAArDY,MAAOC,EAA8Cb,EAA9Ca,YAAaC,EAAiCd,EAAjCc,WAAYC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAYlD,OAFAC,QAAQC,IAAI,cAAed,IAGvB,iCACI,UAAC,KAAD,CAASe,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAWC,KAAG,EAAnD,eAAqD,SAAC,MAAD,IAArD,cACA,gBAAKC,IAbW,SAACV,GAIrB,OAHkBA,EAAW,6CACeA,GACtC,0DAET,CAQiBW,CAAgBX,GAAcY,IAAMb,EAAOc,MAAM,SAC3D,wBAAKd,KACL,uBAAIE,KACJ,wCACA,uBAAIC,KACJ,qCACCC,IAAU,uBAAKA,EAAOW,KAAI,qBAAEC,IAAF,IAAmBC,KAAK,SAEnD,2BACA,SAAC,KAAD,CAASV,GAAG,OAAOC,MAAO,CAACC,KAAI,oBAAEjB,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAAxE,oBACA,SAAC,KAAD,CAASH,GAAG,UAAUC,MAAO,CAACC,KAAI,oBAAEjB,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAA3E,yBAEA,SAAC,KAAD,MAGX,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { NavLink, Outlet, useParams, useLocation} from \"react-router-dom\";\nimport {TiArrowBack} from 'react-icons/ti'\n\n\n\nconst fetchMovieById = async (id) => {\n    const API_KEY = '85df3ff8d6dde44e5fe9194c59be3b9a';\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        if (response.ok) {\n            return response.json();\n            }\n            return Promise.reject(new Error(`We have a problem`))\n        }\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const  location = useLocation();\n        \n    useEffect(() => {\n        \n        fetchMovieById(Number(movieId))\n            .then(setMovie)\n        .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n    } )\n    }, [movieId])\n\n    const { title, poster_path, popularity, overview, genres } = movie;\n   \n    const createPosterUrl = (poster_path) => {\n        const posterUrl = poster_path\n            ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n            : 'https://klike.net/uploads/posts/2020-02/1581672920_6.jpg'\n        return posterUrl\n    } \n\n\n    console.log(\"location =>\", location)\n\n    return (\n        <>\n            <NavLink to={location.state?.from ?? '/movies'} end> <TiArrowBack/>Go Back</NavLink>\n            <img src={createPosterUrl(poster_path)} alt={ title} width='240'/>\n            <h2>{title}</h2>\n            <p>{popularity}</p>\n            <h2> Overview </h2>\n            <p>{overview}</p>\n            <h2> Genres </h2>\n            {genres && <p>{ genres.map(({name}) => name ).join(', ')}</p>}\n\n            <ul>\n            <NavLink to=\"cast\" state={{from: location.state?.from ?? '/movies'}} end> Cast</NavLink>\n            <NavLink to=\"reviews\" state={{from: location.state?.from ?? '/movies'}} end> Review</NavLink>\n            </ul>\n            <Outlet/>\n        </>\n    )\n}\n\nexport default MovieDetails;"],"names":["fetchMovieById","id","fetch","response","ok","json","Promise","reject","Error","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","Number","then","catch","error","message","title","poster_path","popularity","overview","genres","console","log","to","state","from","end","src","createPosterUrl","alt","width","map","name","join"],"sourceRoot":""}