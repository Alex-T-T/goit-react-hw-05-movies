{"version":3,"file":"static/js/736.4acdf4fa.chunk.js","mappings":"6NAEaA,GAAYC,E,OAAAA,IAAO,KAAPA,CAAH,gkB,kBCuCtB,EAnCa,WACT,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAYP,IAVAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAQC,OAAOJ,IACVK,KAAKN,GACLO,OAAM,SAAAC,GACHC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAMI,UACrC,GACR,GAAC,CAACX,KAIEF,EACD,OAAO,KAGX,IAAQc,EAASd,EAATc,KAGR,OAAQ,SAACjB,EAAD,UACa,IAAhBiB,EAAKC,OAAeD,EAAKE,KAAI,YAAkD,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,UACjE,OACI,2BACI,gBAAKC,KAAKC,EAAAA,EAAAA,IAAiBJ,GAAeK,IAAKJ,EAAeK,MAAM,QACpE,uBAAIL,KACJ,wCAAiBC,OAHZH,EAKZ,KACK,wDAGb,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled('ul')`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(256px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 10px;\n    border-radius: 8px;\n    border-bottom: 2px solid blue;\nbackground: #FFEEEE;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n` ","import { useEffect, useState } from \"react\"; \nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"./Cast.styled\";\nimport { CreateProfileUrl, getCast } from \"utils\";\n\n\nconst Cast = () => {\n    const [response, setResponse] = useState(null)\n    const {movieId} = useParams();\n    \n    useEffect(() => {\n        getCast(Number(movieId))\n            .then(setResponse)\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n    },[movieId])\n\n    // console.log(movieId)\n\n    if (!response) {\n        return null\n    }\n\n    const { cast } = response\n    // console.log(response)\n\n    return (<Container>\n        {cast.length !== 0 ? cast.map(({id, profile_path, original_name, character}) =>{\n        return (\n            <li key={id}>\n                <img src={CreateProfileUrl(profile_path)} alt={original_name} width='90'/>\n                <p>{original_name}</p>\n                <p> Character: { character}</p>\n                </li>)\n        })\n            : <p>We haven't info about cast!</p>\n        }\n    </Container>)\n}\n\nexport default Cast;\n"],"names":["Container","styled","useState","response","setResponse","movieId","useParams","useEffect","getCast","Number","then","catch","error","Promise","reject","Error","message","cast","length","map","id","profile_path","original_name","character","src","CreateProfileUrl","alt","width"],"sourceRoot":""}