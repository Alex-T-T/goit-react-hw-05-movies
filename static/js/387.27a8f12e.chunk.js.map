{"version":3,"file":"static/js/387.27a8f12e.chunk.js","mappings":"8QAEaA,GAAQC,EAAAA,EAAAA,IAAO,IAAPA,CAAH,kFAKLC,GAAOD,EAAAA,EAAAA,IAAO,IAAPA,CAAH,wCAGJE,GAAOF,EAAAA,EAAAA,IAAO,KAAPA,CAAH,8I,SCLXG,EAAY,mCAAG,WAAOC,GAAP,6EACD,mCADC,SAEMC,MAAM,sCAAD,OAAuCD,EAAvC,4BADZ,qCADC,YAEXE,EAFW,QAGAC,GAHA,yCAIFD,EAASE,QAJP,gCAMFC,QAAQC,OAAO,IAAIC,MAAJ,uBANb,2CAAH,sDAgDlB,EAvCgB,WAEZ,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAON,EAAP,KAAiBO,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAVAE,EAAAA,EAAAA,YAAU,WACNb,EAAac,OAAOH,IACfI,KAAKL,GACLM,OAAM,SAAAC,GACHX,QAAQC,OAAO,IAAIC,MAAJ,UAAaS,EAAMC,UACrC,GACR,GAAC,CAACP,IAEHQ,QAAQC,IAAIT,IAEPR,EACD,OAAO,KAGX,IAAQkB,EAAYlB,EAAZkB,QAIR,OAHAF,QAAQC,IAAI,cAAejB,IAGnB,wBACgB,IAAnBkB,EAAQC,OACHD,EAAQE,KAAI,YAA8B,IAA3BtB,EAA0B,EAA1BA,GAAIuB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACI,UAAC1B,EAAD,YACI,UAACH,EAAD,sBAAgB4B,MAChB,UAAC1B,EAAD,eAAS2B,OAFFxB,EAKd,KACH,8BAAI,SAAC,MAAD,IAAJ,sCAGb,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled('p')`\nfont-size: 24;\nfont-weight: bold;\nmargin-bottom: 10px;\n`\nexport const Text = styled('p')`\nfont-size: 14;\n`\nexport const Item = styled('li')`\npadding-left: 30px;\npadding-right: 30px;\nmargin-bottom: 20px;\nborder-radius: 8px;\nborder-bottom: 2px solid blue;\n`","import { useEffect, useState } from \"react\"; \nimport { useParams } from \"react-router-dom\";\nimport {RiErrorWarningLine} from 'react-icons/ri'\nimport { Title, Text, Item } from \"./Reviews.styled\";\n\nconst fetchRewiews = async (id) => {\n    const API_KEY = '85df3ff8d6dde44e5fe9194c59be3b9a';\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`)\n        if (response.ok) {\n            return response.json();\n            }\n            return Promise.reject(new Error(`We have a problem`))\n        }\n\nconst Reviews = () => {\n\n    const [response, setResponse] = useState(null)\n    const { movieId } = useParams();\n    \n    \n    useEffect(() => {\n        fetchRewiews(Number(movieId))\n            .then(setResponse)\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n    },[movieId])\n\n    console.log(movieId)\n\n    if (!response) {\n        return null\n    }\n\n    const { results } = response\n    console.log('response =>', response)\n\n\n    return (<ul>\n        {results.length !== 0\n            ? results.map(({ id, author, content }) => {\n                return (\n                    <Item key={id}>\n                        <Title>Author: {author}</Title>\n                        <Text> { content}</Text>\n                    </Item>\n                    )\n                })\n            : <p> <RiErrorWarningLine/> Sorry, we haven`t reviews yet!</p>\n        }\n    </ul>)\n}\n\nexport default Reviews;"],"names":["Title","styled","Text","Item","fetchRewiews","id","fetch","response","ok","json","Promise","reject","Error","useState","setResponse","movieId","useParams","useEffect","Number","then","catch","error","message","console","log","results","length","map","author","content"],"sourceRoot":""}