{"version":3,"file":"static/js/691.68411c2a.chunk.js","mappings":"yQAGaA,GAAYC,EAAAA,EAAAA,IAAO,OAAPA,CAAH,kLAWTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sQAePG,GAAaH,EAAAA,EAAAA,IAAO,MAAPA,CAAH,2GAQVI,GAAOJ,EAAAA,EAAAA,IAAO,IAAPA,CAAH,oGAOJK,GAAML,EAAAA,EAAAA,IAAO,MAAPA,CAAH,sD,oCC4BhB,EA7De,WACX,OAA4BM,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAEQ,KAAVJ,GAA0B,OAAVA,IAGpBJ,GAAY,GACZF,GAAa,IAEbW,EAAAA,EAAAA,IAAgBL,GACXM,MAAK,SAACC,GACHf,EAAUe,GAEVb,GAAa,EAEhB,IACAc,OAAM,SAAAC,GACHC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAMI,UACrC,IACR,GAAE,CAACb,IAUJ,OACI,UAACjB,EAAD,YACI,SAAC+B,EAAA,EAAD,CAAcC,aAVG,SAACC,GACdA,IAAgBhB,EAIxBD,EAAgC,KAAhBiB,EAAqB,CAAEhB,MAAOgB,GAAgB,CAAC,GAH3DC,EAAAA,GAAAA,MAAA,iCAAsCjB,EAAtC,qCAIP,EAIiDkB,MAAOlB,IAChDP,IAAa,4BACV,mDACI,SAAC,KAAD,OAEPE,IAAY,UAACR,EAAD,YACT,SAACC,EAAD,2CACA,SAACC,EAAD,CAAK8B,IAAKC,EAAQC,IAAI,SAASC,MAAM,OAAOC,OAAO,cAEvD,yBACKhC,IAAU,wBACgB,IAA1BA,EAAOiC,QAAQC,OACVlC,EAAOiC,QAAQE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OAAO,yBAAa,UAAC3C,EAAD,CAAS4C,GAAE,UAAKF,GAAMG,MAAO,CAACC,KAAM7B,GAAW8B,KAAG,EAAlD,cAAqDJ,MAAzDD,EACnB,KACC,qDAKrB,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled('main')`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 100%;\nheight: 100%;\n`\n\nexport const NavItem = styled(NavLink)`\ndisplay: block;\nwidth: 300px;\npadding: 8px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: #000;\n\n    :hover,\n    :focus-visible {\n        background: linear-gradient(to right, #1488cc, #2b32b2);\n        color: #fff;\n    }\n`\n\nexport const DefaultDiv = styled('div')`\nposition: relative;\ncolor: blue;\nfont-size: 64px;\nwidth: 100%;\nheight: 100vh;\n`\n\nexport const Text = styled('p')`\nposition: absolute;\ntop:50%;\nleft:50%;\ntransform:translate(-50%, -50%);\n`\n\nexport const Img = styled('img')`\nwidth: 100%;\nheight: 100vh;\n`","import { useState, useEffect} from \"react\"\nimport { useLocation } from \"react-router-dom\";\n\nimport MoviesSearch from \"../../components/MoviesSearch/MoviesSearch\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Dna } from 'react-loader-spinner';\nimport { NavItem, Container, DefaultDiv,Text, Img } from \"./Movies.styled\";\nimport { toast } from \"react-toastify\";\nimport { getSearchMovies } from \"utils\";\nimport cinema from '../../image/cinema.jpg'\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSearch, setIsSearch] = useState(true);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n    const location = useLocation();\n\n    useEffect(() => {\n\n        if (query === '' || query === null) {\n            return\n        }\n        setIsSearch(false);\n        setIsLoading(true);\n        \n        getSearchMovies(query)\n            .then((response) => {\n                setMovies(response);\n                \n                setIsLoading(false);\n                \n            })\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n    }, [query])\n\n        const onFormSubmit = (searchValue) => {\n            if (searchValue === query) {\n            toast.error(`We have already found \"${query}\"! Please, enter new search value`)\n        return\n        }\n        setSearchParams(searchValue !== '' ? { query: searchValue } : {})\n    }\n\n    return (\n        <Container>\n            <MoviesSearch onFormSubmit={onFormSubmit} value={query} />\n            {isLoading && <div>\n                <p>Loading... Please wait</p> \n                    <Dna/> \n            </div>}\n            {isSearch && <DefaultDiv>\n                <Text>Find a great film and relax</Text>\n                <Img src={cinema} alt=\"cinema\" width='100%' height='100vh'/>\n            </DefaultDiv>}\n            <div>\n                {movies && <ul>\n                {movies.results.length !== 0\n                    ? movies.results.map(({ id, title }) => {\n                        return <li key={id}><NavItem to={`${id}`} state={{from: location}} end> {title }</NavItem></li>\n                    })\n                    : <p>Change your request</p>}\n                </ul>}\n            </div>\n        </Container>\n    )\n}\n\n\nexport default Movies;"],"names":["Container","styled","NavItem","NavLink","DefaultDiv","Text","Img","useState","movies","setMovies","isLoading","setIsLoading","isSearch","setIsSearch","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getSearchMovies","then","response","catch","error","Promise","reject","Error","message","MoviesSearch","onFormSubmit","searchValue","toast","value","src","cinema","alt","width","height","results","length","map","id","title","to","state","from","end"],"sourceRoot":""}