{"version":3,"file":"static/js/170.16249d44.chunk.js","mappings":"4RAGaA,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,0fAaTC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,48BAuBPG,GAAUH,EAAAA,EAAAA,IAAO,MAAPA,CAAH,qFAMPI,GAAQJ,EAAAA,EAAAA,IAAO,KAAPA,CAAH,8CAILK,GAAOL,EAAAA,EAAAA,IAAO,IAAPA,CAAH,8CAIJM,GAAkBN,EAAAA,EAAAA,IAAO,KAAPA,CAAH,kN,kBC/CtBO,EAAc,mCAAG,WAAOC,GAAP,6EACH,mCADG,SAEIC,MAAM,sCAAD,OAAuCD,EAAvC,oBADZ,qCADG,YAEbE,EAFa,QAGFC,GAHE,yCAIJD,EAASE,QAJL,gCAMJC,QAAQC,OAAO,IAAIC,MAAJ,uBANX,2CAAH,sDA+EpB,EAtEqB,WAAO,IAAD,YACvB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACNhB,EAAeiB,OAAOL,IACjBM,KAAKP,GACTQ,OAAM,SAAAC,GACPd,QAAQC,OAAO,IAAIC,MAAJ,UAAaY,EAAMC,UACrC,GACA,GAAE,CAACT,IAEJ,IAAQU,EAAqEZ,EAArEY,MAAOC,EAA8Db,EAA9Da,YAAaC,EAAiDd,EAAjDc,aAAcC,EAAmCf,EAAnCe,SAAUC,EAAyBhB,EAAzBgB,OAgB9CC,EAPe,SAACA,GAIlB,OAHkBA,EAAI,YACZC,EAAAA,EAAAA,GAAO,IAAIC,KAAKF,GAAO,QADX,KAEhB,EAET,CAEYG,CAhBgEpB,EAAjBqB,cA0BtDC,EARkB,SAACC,GACrB,IAAMC,GAA0B,GAARD,GAAYE,QAAQ,GAI5C,OAHkBF,EAAK,UACdC,EADc,KAEjB,0BAET,CAEkBE,CAAgBZ,GAInC,OAFAa,QAAQC,IAAI,kBAAmBX,IAG3B,iCACI,UAACjC,EAAD,CAAS6C,GAAE,oBAAEzB,EAAS0B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAWC,KAAG,EAAnD,eAAqD,SAAC,MAAD,IAArD,cACA,UAAClD,EAAD,YACI,gBAAKmD,IAhCO,SAACpB,GAIrB,OAHkBA,EAAW,6CACeA,GACtC,0DAET,CA2BqBqB,CAAgBrB,GAAcsB,IAAMvB,EAAOwB,MAAM,SAC3D,UAAClD,EAAD,YACA,UAACC,EAAD,WAAQyB,EAAR,IAAgBK,MAChB,UAAC7B,EAAD,2BAAoBkC,MACpB,SAACnC,EAAD,0BACA,SAACC,EAAD,UAAO2B,KACP,SAAC5B,EAAD,uBACC6B,IAAU,SAAC5B,EAAD,UAAQ4B,EAAOqB,KAAI,qBAAEC,IAAF,IAAmBC,KAAK,eAG1D,UAAClD,EAAD,YACI,SAACL,EAAD,CAAS6C,GAAG,OAAOC,MAAO,CAACC,KAAI,oBAAE3B,EAAS0B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAAxE,oBACA,SAAChD,EAAD,CAAS6C,GAAG,UAAUC,MAAO,CAACC,KAAI,oBAAE3B,EAAS0B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAYC,KAAG,EAA3E,yBAGJ,SAAC,EAAAQ,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QAIf,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled('div')`\n    display: flex;\n    justify-content: center;\n    padding: 30px;\n    margin-bottom: 20px;\n    font-size: 20px;\n    color: #010101;\n    border-radius: 8px;\n    border-bottom: 2px solid blue;\nbackground: #FFEEEE;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`\nexport const NavItem = styled(NavLink)`\n    width: 120px;\n    text-align: center;\n    margin-bottom: 5px;\n    border: 2px solid blue;\n    border-radius: 8px;\nbackground: #FFEEEE;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to right, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to right, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n    &.active {\n        background: linear-gradient(to right, #1488cc, #2b32b2);\n        color: #fff;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: red;\n        background: #FFEEEE;  /* fallback for old browsers */\n        background: -webkit-linear-gradient(to left, #DDEFBB, #FFEEEE);  /* Chrome 10-25, Safari 5.1-6 */\n        background: linear-gradient(to left, #DDEFBB, #FFEEEE); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        transform: scale(1.02);\n    }\n`\nexport const Wrapper = styled('div')`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 30px;\n`\n\nexport const Title = styled('h2')`\nmargin-bottom: 10px;\n`\n\nexport const Text = styled('p')`\nmargin-bottom: 10px;\n`\n\nexport const AdditionalLinks = styled('ul')`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 30px;\n    margin-bottom: 20px;\n    border-radius: 8px;\n    border-bottom: 2px solid blue;\n`","import { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useParams, useLocation} from \"react-router-dom\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport { Container, NavItem, Wrapper, Title, Text, AdditionalLinks } from \"./MovieDetails.styled\";\nimport { format } from 'date-fns'\n\nconst fetchMovieById = async (id) => {\n    const API_KEY = '85df3ff8d6dde44e5fe9194c59be3b9a';\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        if (response.ok) {\n            return response.json();\n            }\n            return Promise.reject(new Error(`We have a problem`))\n        }\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n\n        \n    useEffect(() => {\n        fetchMovieById(Number(movieId))\n            .then(setMovie)\n        .catch(error => {\n        Promise.reject(new Error(`${error.message}`))\n    } )\n    }, [movieId])\n\n    const { title, poster_path, vote_average, overview, genres, release_date } = movie;\n   \n    const createPosterUrl = (poster_path) => {\n        const posterUrl = poster_path\n            ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n            : 'https://klike.net/uploads/posts/2020-02/1581672920_6.jpg'\n        return posterUrl\n    } \n\n    const FormatedDate = (date) => {\n        const finalDate = date\n            ? `(${format(new Date(date), 'yyyy')})`\n            : '';\n        return finalDate;\n    };\n\n    const date = FormatedDate(release_date)\n\n    const formatUserScore = (value) => {\n        const transformValue = (value * 10).toFixed(0); \n        const userScore = value\n            ? `${transformValue}%`\n            : 'There is no user scores.';\n        return userScore\n    }\n\n    const userScores = formatUserScore(vote_average)\n\n    console.log(\"FormatedDate =>\", date);\n\n    return (\n        <>\n            <NavItem to={location.state?.from ?? '/movies'} end> <TiArrowBack/>Go Back</NavItem>\n            <Container>\n                <img src={createPosterUrl(poster_path)} alt={ title} width='240'/>\n                <Wrapper>\n                <Title>{title} {date}</Title>\n                <Text> User score: {userScores}</Text>\n                <Title> Overview </Title>\n                <Text>{overview}</Text>\n                <Title> Genres </Title>\n                {genres && <Text>{ genres.map(({name}) => name ).join(', ')}</Text>}\n                </Wrapper>\n            </Container>\n            <AdditionalLinks>\n                <NavItem to=\"cast\" state={{from: location.state?.from ?? '/movies'}} end> Cast</NavItem>\n                <NavItem to=\"reviews\" state={{from: location.state?.from ?? '/movies'}} end> Review</NavItem>\n            </AdditionalLinks>\n\n            <Suspense fallback={null}>\n                <Outlet/>\n            </Suspense>\n        </>\n    )\n}\n\nexport default MovieDetails;"],"names":["Container","styled","NavItem","NavLink","Wrapper","Title","Text","AdditionalLinks","fetchMovieById","id","fetch","response","ok","json","Promise","reject","Error","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","Number","then","catch","error","message","title","poster_path","vote_average","overview","genres","date","format","Date","FormatedDate","release_date","userScores","value","transformValue","toFixed","formatUserScore","console","log","to","state","from","end","src","createPosterUrl","alt","width","map","name","join","Suspense","fallback"],"sourceRoot":""}